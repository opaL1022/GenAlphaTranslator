{"version":3,"file":"popup.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mCAAmC;AAC/D;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA,qDAAqD,IAAI,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D,SAAS;AACT;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D,SAAS;AACT,4BAA4B,mCAAmC;AAC/D;AACA;AACA,wDAAwD,2BAA2B;AACnF,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC","sources":["webpack://genalphatranslator/./src/popup.ts"],"sourcesContent":["\"use strict\";\nconst circleToggle = document.getElementById('circleToggle');\nconst circleSwitch = document.getElementById('circleSwitch');\nconst changeTitle = document.getElementById('title');\nchrome.storage.sync.get(\"checkboxState\", (data) => {\n    if (data.checkboxState !== undefined) {\n        circleToggle.checked = data.checkboxState;\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n            const activeTab = tabs[0];\n            if (circleToggle.checked) {\n                circleSwitch.style.backgroundColor = '#4CAF50';\n                console.log('Switch is ON');\n                changeTitle.style.color = '#4CAF50';\n                chrome.tabs.sendMessage(activeTab.id, { action: \"enable\" });\n            }\n            else {\n                circleSwitch.style.backgroundColor = '#ccc';\n                console.log('Switch is OFF');\n                changeTitle.style.color = '#ccc';\n                chrome.tabs.sendMessage(activeTab.id, { action: \"disable\" });\n            }\n        });\n    }\n});\nif (!circleToggle || !circleSwitch || !changeTitle) {\n    throw new Error('Elements not found');\n}\ncircleToggle.addEventListener('change', () => {\n    chrome.storage.sync.set({ checkboxState: circleToggle.checked });\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        const activeTab = tabs[0];\n        if (circleToggle.checked) {\n            circleSwitch.style.backgroundColor = '#4CAF50';\n            changeTitle.style.color = '#4CAF50';\n            chrome.tabs.sendMessage(activeTab.id, { action: \"enable\" });\n        }\n        else {\n            circleSwitch.style.backgroundColor = '#ccc';\n            changeTitle.style.color = '#ccc';\n            chrome.tabs.sendMessage(activeTab.id, { action: \"disable\" });\n        }\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // 獲取滑桿和顯示數值的 DOM 元素\n    const slider = document.getElementById(\"slider\");\n    const sliderValue = document.getElementById(\"sliderValue\");\n    const textContainer = document.getElementById(\"text-container\");\n    const originalText = \"skibidi density\";\n    if (!slider || !sliderValue) {\n        console.error(\"Slider or sliderValue element not found\");\n        return;\n    }\n    function renderText(colorIndex) {\n        const textLength = originalText.length;\n        let html = \"\";\n        // 遍歷文本，根據 slider 值設置字的顏色\n        for (let i = 0; i < textLength; i++) {\n            if (i < colorIndex) {\n                html += `<span style=\"color: #4CAF50;\">${originalText[i]}</span>`;\n            }\n            else {\n                html += originalText[i];\n            }\n        }\n        // 更新文本容器\n        textContainer.innerHTML = html;\n    }\n    // 初始化滑桿數值，從 chrome.storage 獲取已保存的值\n    chrome.storage.sync.get(\"sliderValue\", (data) => {\n        const storedValue = data.sliderValue !== undefined ? data.sliderValue : \"0\"; // 默認值為 50\n        slider.value = storedValue;\n        sliderValue.textContent = storedValue;\n    });\n    // 添加滑桿變化事件監聽\n    slider.addEventListener(\"input\", () => {\n        const currentValue = slider.value;\n        const textSliderValue = parseInt(currentValue, 10);\n        const textLength = originalText.length;\n        const curColorIndex = Math.round((textSliderValue / 100) * textLength);\n        chrome.storage.sync.set({ colorIndex: curColorIndex }, () => {\n        });\n        // 更新顯示數值\n        sliderValue.textContent = currentValue;\n        // 將滑桿值保存到 chrome.storage\n        chrome.storage.sync.set({ sliderValue: currentValue }, () => {\n        });\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n            const activeTab = tabs[0];\n            if (activeTab?.id !== undefined) {\n                chrome.tabs.sendMessage(activeTab.id, { sliderValue: currentValue }, (response) => {\n                });\n            }\n        });\n        renderText(curColorIndex);\n    });\n    chrome.storage.sync.get(\"colorIndex\", (data) => {\n        const colorIndex = data.colorIndex !== undefined ? data.colorIndex : 0;\n        renderText(colorIndex);\n    });\n});\n"],"names":[],"sourceRoot":""}